#####################################################################
#  Fan Control
#####################################################################
[heater_fan hotend_fan]
pin: P1.4
max_power: 1.0
shutdown_speed: 0
cycle_time: 0.005
hardware_pwm: false
kick_start_time: 0.01
heater: extruder
heater_temp: 60.0
fan_speed: 1.00

[fan]
pin: P2.4
max_power: 1.0
shutdown_speed: 0
kick_start_time: 0.01
cycle_time: 0.005
hardware_pwm: true

[temperature_sensor RPi]
sensor_type: temperature_host
min_temp: 10
max_temp: 100
gcode_id: PI

#####################################################################
#  Macros
#####################################################################
# M106 with lock and manual set feature
# M106 S128 M1 will update the fan in any case
[gcode_macro M106]
description: set fan with manual override and lock option
rename_existing: M106.1
gcode:
  # get params and prepare to send them to the base macro
  {% set get_params = [] %}
  {% for key in params %}
    {% set get_params = get_params.append(key + params[key])  %}
  {% endfor %}
  {%set manual = params.M|default(0) %}
  {% if printer['output_pin lock_M106'].value|int == 0 or manual == '1' %}
    M106.1 {get_params|join(" ")}
  {% else %}
    {action_respond_info("M106 update is locked")}
  {% endif %}
  
  
#####################################################################
# 	Display Menu definition                                        #
#####################################################################
##  Disable stock config
[menu __main __control __fanonoff]
type: disabled

[menu __main __control __fanspeed]
type: disabled

## Add menu for fan
[menu __main __control __fan]
type: list
name: Fan 
index: 5


[menu __main __control __fan __partcooling]
type: list
name: Fan {'%3d' % (printer.fan.speed*100)}%

[menu __main __control __fan __partcooling __fanonoff]
type: input
enable: {'fan' in printer}
name: Toggle: {'ON' if menu.input else 'OFF'}
input: {printer.fan.speed}
input_min: 0
input_max: 1
input_step: 1
gcode:
  M106 S{255 if menu.input else 0}

[menu __main __control __fan __partcooling __fanspeed]
type: input
enable: {'fan' in printer}
name: Speed: {'%3d' % (menu.input*100)}%
input: {printer.fan.speed}
input_min: 0
input_max: 1
input_step: 0.01
gcode:
    M106 S{'%d' % (menu.input*255)}
