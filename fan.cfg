#####################################################################
#  Fan Control
#####################################################################
[heater_fan hotend_fan]
pin: FAN2_PIN
max_power: 1.0
shutdown_speed: 0
cycle_time: 0.002
hardware_pwm: true
kick_start_time: 0.1
heater: extruder
heater_temp: 60.0
fan_speed: 1.0

[fan]
pin: FAN1_PIN
max_power: 1.0
shutdown_speed: 0
cycle_time: 0.002
hardware_pwm: true
kick_start_time: 0.1

[controller_fan steppers_fan]
pin: FAN_PIN
max_power: 1
shutdown_speed: 0
cycle_time: 0.005
hardware_pwm: false
kick_start_time: 0.1
fan_speed: 1.000
# Скорость вентилятора (выраженная в значении от 0,0 до 1,0), с которой вентилятор
# будет установлено, когда активен нагреватель или шаговый драйвер.
# Значение по умолчанию равно 1.0
idle_timeout: 30
# Количество времени (в секундах) после включения шагового привода или нагревателя
# был активен, и вентилятор должен продолжать работать. Значение по умолчанию
# составляет 30 секунд.
#idle_speed: 0.25
# Скорость вентилятора (выраженная в значении от 0,0 до 1,0), с которой вентилятор
# будет установлено в то время, когда нагреватель или шаговый драйвер были активны и
# до достижения значения idle_timeout. Значение по умолчанию - fan_speed.
#heater:
stepper: stepper_z, stepper_y, stepper_x
#  Имя раздела конфигурации, определяющего нагреватель / шаговый привод,
# для которого этот вентилятор ассоциируется с. Если список имен 
# нагревателей/шаговых устройств разделен запятыми указано здесь,
# то вентилятор будет включен, когда любой из указанных
# включены нагреватели/степперы. Нагреватель по умолчанию - "экструдер",
# шаговый шаг по умолчанию - это все они.


## dummy output to get an switch in Mainsail
## any unused mcu pin can be defined you will not connect anything
## as I use the rPi as mcu I will use a pin from it
## Off -> M106 will update fan
## On -> M106 can not uodate fan
[output_pin lock_M106]
pin: LED_PIN
value:0

#####################################################################
#  Macros
#####################################################################
# M106 with lock and manual set feature
# M106 S128 M1 will update the fan in any case
[gcode_macro M106]
description: set fan with manual override and lock option
rename_existing: M106.1
gcode:
  {% if printer['output_pin lock_M106'].value|int == 0 or params.M|default(0) == '1' %}
    M106.1 {rawparams}
  {% else %}
    {action_respond_info("M106 update is locked")}
  {% endif %}
  
  
#####################################################################
#  Display Menu definition
#####################################################################
##  Disable stock config
[menu __main __control __fanonoff]
type: disabled

[menu __main __control __fanspeed]
type: disabled

## Add menu for fan
[menu __main __control __fan]
type: list
name: Fan 
index: 5

[menu __main __control __fan __partcooling]
type: list
enable: {'fan' in printer}
name: Fan {'%3d' % (printer.fan.speed*100)}%

[menu __main __control __fan __partcooling __fanonoff]
type: input
name: Toggle: {'ON' if menu.input else 'OFF'}
input: {printer.fan.speed}
input_min: 0
input_max: 1
input_step: 1
gcode:
  M106 S{255 if menu.input else 0}

[menu __main __control __fan __partcooling __fanspeed]
type: input
name: Speed: {'%3d' % (menu.input*100)}%
input: {printer.fan.speed}
input_min: 0
input_max: 1
input_step: 0.01
gcode:
    M106 S{'%d' % (menu.input*255)}
