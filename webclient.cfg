[pause_resume]
recover_velocity: 300.0

[display_status]

[respond]
default_type: echo
#   Sets the default prefix of the "M118" and "RESPOND" output to one
#   of the following:
#       echo: "echo: " (This is the default)
#       command: "// "
#       error: "!! "
#default_prefix: echo:
#   Directly sets the default prefix. If present, this value will
#   override the "default_type".

#####################################################################
#  Macros
#####################################################################
[gcode_macro CANCEL_PRINT]
description: Cancel the actual running print
rename_existing: CANCEL_PRINT_BASE
variable_execute: 'false'
gcode:
  ##### Get params and default #####
  {% set park = params.PARK|default(0)|int %}
  {% set error = params.ERROR|default(0)|int %}
  ##### Получить пользовательские настройки #####
  {% set park_pos = printer['gcode_macro _USER_VARIABLE'].park_bed %}
  {% set purge_pos = printer['gcode_macro _USER_VARIABLE'].purge %}
  {% set add_temp = printer["gcode_macro _USER_VARIABLE"].extruder_min_add|int %}
  {% set retreact = printer["gcode_macro _USER_VARIABLE"].retract_cancel|float * -1 %}
  ##### Получить задействованное оборудование #####
  {% set ena_neo = printer['gcode_macro _USER_VARIABLE'].neo_display|lower %}
  {% set ena_caselight = printer['gcode_macro _USER_VARIABLE'].caselight|lower %}
  {% set ena_unload_sd = printer['gcode_macro _USER_VARIABLE'].print_end_unload_sd|lower %}
  ##### сохраните минимальную и текущую температуру выдавливания в переменной #####
  {% set extruder_min = printer.configfile.config.extruder.min_extrude_temp|int + add_temp %}
  ##### конец определений #####
  SET_GCODE_VARIABLE MACRO=CANCEL_PRINT VARIABLE=execute VALUE='"true"'
  M117 Cancel
  CANCEL_PRINT_BASE
  {% if printer.extruder.can_extrude|lower == 'false' %}
      {action_respond_info("Extruder Temp to low heat to %2dC" % extruder_min)}
      M109 S{extruder_min}                                  ; heat extruder and wait
  {% endif %}
  G0 X{purge_pos[0]} Y{purge_pos[1]} F18000
  M83
  G1 E{retreact} F1800
  TURN_OFF_HEATERS                                          ; turn off heaters
  {% if park == 1 %}
    G90
    #G0 Z{park_pos[2]} F600                                 ; move nozzle to z high first
    G0 X{park_pos[0]} Y{park_pos[1]} F18000                 ; home to get toolhead in the middle
  {% endif %}
  M107                                                      ; turn off fan
  SET_GCODE_OFFSET Z=0.0
  _TIMELAPSE_TAKE_FRAME
  HYPERLAPSE_STOP
  M220 S100
  M221 S100
  _ADD_PRINT_TIME
  {% if error == 1 %}
    {% if ena_neo == 'true' %} _LCD_KNOB COLOR=RED BLINK=0.2 {% endif %}
    _SD_PRINT_STATS R='abort'
  {% else %}
   {% if ena_neo == 'true' %} _LCD_KNOB COLOR=BLUE {% endif %}
    _SD_PRINT_STATS R='canceled'
  {% endif %}
  _SD_PRINTER_STATS
  {% if ena_caselight == 'true' %} _CASELIGHT_OFF {% endif %}
  {% if ena_unload_sd == 'true' %} UPDATE_DELAYED_GCODE ID=_DELAY_SDCARD_RESET_FILE DURATION=10 {% endif %}
  {% if ena_neo == 'true' %} UPDATE_DELAYED_GCODE ID=_LCD_INIT_OFF DURATION=10 {% endif %}
  UPDATE_DELAYED_GCODE ID=_CLEAR_DISPLAY DURATION=10

[gcode_macro PAUSE]
description: Pause the actual running print
rename_existing: PAUSE_BASE
gcode:
  ##### Получить пользовательские настройки #####
  {% set add_temp = printer["gcode_macro _USER_VARIABLE"].extruder_min_add|int %}
  {% set retract = printer["gcode_macro _USER_VARIABLE"].retract_pause|float * -1 %}
  {% set purge_pos = printer["gcode_macro _USER_VARIABLE"].purge %}
  ##### сохраните минимальную и текущую температуру выдавливания в переменной #####
  {% set extruder_min = printer.configfile.config.extruder.min_extrude_temp|int + add_temp %}
  {% set extruder_target = printer.extruder.target %}
  ##### либо используйте положение корзины для кистей, либо определяемое пользователем #####
  {% set x_park = params.X|default(purge_pos[0]) %}
  {% set y_park = params.Y|default(purge_pos[1]) %}
  ##### рассчитайте положение подъема для сохранения #####
  {% set max_z = printer.toolhead.axis_maximum.z|float %}
  {% set act_z = printer.toolhead.position.z|float %}
  {% if act_z < (max_z - 2.0) %}
    {% set z_safe = 2.0 %}
  {% else %}
    {% set z_safe = max_z - act_z %}
  {% endif %}
  ##### конец определений #####
  ##### добавлено из-за датчика движения #####
  ## not sure why but sometime it generate an runout event while heatsoak
  {% if printer.extruder.can_extrude|lower == 'false' %}
      {action_respond_info("Extruder Temp to low heat to %2dC" % extruder_min)}
      M109 S{extruder_min} ; heat extruder and wait
  {% endif %}
  ##### добавлено из-за датчика движения #####
  {% if ena_neo == 'true' %} _LCD_KNOB COLOR=BLUE BLINK=1 {% endif %}
  M117 Pause
  PAUSE_BASE
  G91
  G1 E{retract} F2100
  G0 Z{z_safe} F600
  G90
  G0 X{x_park} Y{y_park} F18000 ; park nozzle at brush bin or user defined
  # восстановите старую температуру экструдера
  M109 S{extruder_target}
  M104 S{extruder_target}
  UPDATE_DELAYED_GCODE ID=_CLEAR_DISPLAY DURATION=10

[gcode_macro RESUME]
description: Resume the actual running print
rename_existing: RESUME_BASE
gcode:
  ##### Получить пользовательские настройки #####
  {% set add_temp = printer['gcode_macro _USER_VARIABLE'].extruder_min_add|int %}
  {% set extrude = printer['gcode_macro _USER_VARIABLE'].retract_pause %}
  ##### сохраните минимальную и текущую температуру выдавливания в переменной #####
  {% set extruder_min = printer.configfile.config.extruder.min_extrude_temp|int + add_temp %}
  {% set extruder_target = printer.extruder.target %}
  ##### получить параметр СКОРОСТИ, если он указан ####
  {% if 'VELOCITY' in params|upper %}
    {% set get_params = ('VELOCITY=' + params.VELOCITY)  %}
  {%else %}
    {% set get_params = "" %}
  {% endif %}
  ##### конец определений #####
  {% if ena_neo == 'true' %} _LCD_KNOB COLOR=RED {% endif %}
  M117 Printing
  {% if printer.extruder.can_extrude|lower == 'false' %}
      {action_respond_info("Extruder Temp to low heat to %2dC" % extruder_min)}
      M109 S{extruder_min} ; heat extruder and wait
  {% endif %}
  G91
  G1 E{extrude} F300
  _WIPE
  # восстановите старую температуру экструдера
  M109 S{extruder_target}
  RESUME_BASE {get_params}
  UPDATE_DELAYED_GCODE ID=_CLEAR_DISPLAY DURATION=10

#####################################################################
#                 ЖК-меню, работающее с mainsail
#####################################################################
#   Main
#   ...
#   + SD Card
#       + Show loaded file
#       + Load File (only if not printing and no file loaded)
#       + Unload File (only if not printing and a file is loaded)
#       + Start printing (only if not printing and a file is loaded)
#       + Pause printing (only while printing)
#       + Resume printing (only while paused)
#       + Cancel printing (only while paused)

#####################################################################
#                 LCD menu that works with mainsail
#####################################################################
[menu __main __sdcard]
type: list
enable: {'virtual_sdcard' in printer}
name: SD Card

[menu __main __sdcard __file]
type: command
name: File: {printer.print_stats.filename}
index: 0

[menu __main __sdcard __load]
type: vsdlist
#type: list
#event_sender: __vsdfiles
enable: {not printer.virtual_sdcard.file_path and not (printer.print_stats.state == "printing" or printer.print_stats.state == "paused")}
name: Load file
index: 1

[menu __main __sdcard __unload]
type: command
enable: {printer.virtual_sdcard.file_path and not (printer.print_stats.state == "printing" or printer.print_stats.state == "paused")}
name: Unload file
index: 2
gcode:
  # back is needed to reload the modified menu structure
  {menu.back()}
  SDCARD_RESET_FILE

[menu __main __sdcard __start]
type: command
enable: {printer.virtual_sdcard.file_path and not (printer.print_stats.state == "printing" or printer.print_stats.state == "paused")}
name: Start print
index: 3
gcode:
  {menu.exit()}
  UPDATE_DELAYED_GCODE ID=_LCD_INIT_OFF DURATION=10
  M24

[menu __main __sdcard __pause]
type: command
enable: {printer.print_stats.state == "printing"}
name: Pause print
gcode:
  {menu.back()}
  PAUSE

[menu __main __sdcard __resume]
type: command
enable: {printer.print_stats.state == "paused"}
name: Resume print
gcode:
  {menu.exit()}
  UPDATE_DELAYED_GCODE ID=_LCD_INIT_OFF DURATION=10
  RESUME

[menu __main __sdcard __cancel]
type: command
enable: {printer.print_stats.state == "paused"}
name: Cancel print
gcode:
  {menu.exit()}
  UPDATE_DELAYED_GCODE ID=_LCD_INIT_OFF DURATION=10
  CANCEL_PRINT
