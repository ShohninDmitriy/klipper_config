[server]
host: 0.0.0.0
port: 7125
klippy_uds_address: /tmp/klippy_uds
config_path: /home/pi/klipper_config
# Максимальный размер, разрешенный для загрузки файла. По умолчанию 1024 МБ.
max_upload_size: 1024
# При установке True Moonraker будет входить в подробный режим. На этом этапе
# разработки по умолчанию True. В будущем это изменится.
enable_debug_logging: False
#   The path to the folder that stores Moonraker's lmdb database files.
#   It is NOT recommended to place this file in a location that is served by
#   Moonraker (such as the "config_path" or the location where gcode
#   files are stored).  If the folder does not exist an attempt will be made
#   to create it.  The default is ~/.moonraker_database.
database_path: ~/.moonraker_database
# Максимальное количество значений температуры для хранения для каждого датчика. Примечание
# что это значение также применяется к "target", "power" и "fan_speed"
# если датчик сообщает о них. По умолчанию 1200, этого достаточно, чтобы
# хранить примерно 20 минут данных с одним значением в секунду.
temperature_store_size: 3600
# Максимальное количество "строк gcode" для хранения. По умолчанию 1000.
gcode_store_size:  2000

[authorization]
force_logins: False
cors_domains:
  *.local
  *.lan
  *://app.fluidd.xyz
trusted_clients:
    127.0.0.1
    192.168.0.0/16

[octoprint_compat]

[history]

[update_manager]
enable_repo_debug: False
# Если установлено значение True, moonraker будет обходить проверку
# репо и разрешать обновления с неофициальных удаленных устройств
# и/или филиалов. Также разрешены обновления отдельных репозиториев.
# Эта опция предназначена для разработчиков и не должна использоваться
# на производственных машинах. Значение по умолчанию равно False.
enable_auto_refresh: True
# Если установлено значение True, Moonraker будет пытаться получать
# информацию о доступных обновлениях примерно каждые 24 часа,
# с 12 до 4 утра. Если установлено значение False, Moonraker будет
# получать состояние обновления только при запуске, и клиентам необходимо
# будет запросить состояние обновления Moonraker.
# Значение по умолчанию равно False.
enable_system_updates: True
# Логическое значение, которое можно использовать для переключения обновлений
# системных пакетов.  В настоящее время Moonraker поддерживает обновление
# пакетов только через APT, поэтому эта опция полезна пользователям, желающим
# поэкспериментировать с дистрибутивами Linux, использующими другие приложения
# для управления пакетами, или пользователям, предпочитающим управлять своими
# пакетами напрямую.  Обратите внимание, что если для этого параметра установлено
# значение False, пользователям необходимо будет убедиться, что все системные
# зависимости обновлены.  Значение по умолчанию равно True.
channel: dev
# Канал обновления применен к Klipper и Moonraker. Может быть "dev", который будет
# получать обновления с помощью git, или "бета", которая будет получать
# заархивированные бета-версии. Обратите внимание, что этот канал не применяется
# к обновлениям клиента, канал обновления клиента определяется его параметром "тип".
# Когда эта опция будет изменена, следующее "обновление" поменяет каналы, все
# неотслеживаемые файлы в пути приложения будут удалены во время этого процесса.
# Значение по умолчанию-dev.

[update_manager mainsail]
type: web_beta
repo: meteyou/mainsail
path: /home/pi/mainsail
persistent_files: config.json

[update_manager fluidd]
type: web
repo: cadriel/fluidd
path: /home/pi/fluidd

[update_manager KlipperScreen]
type: git_repo
path: /home/pi/KlipperScreen
env: /home/pi/.KlipperScreen-env/bin/python
origin: https://github.com/ShohninDmitriy/KlipperScreen.git
requirements: scripts/KlipperScreen-requirements.txt
venv_args: -p python3
install_script: scripts/KlipperScreen-install.sh

[update_manager kiauh]
type: git_repo
path: /home/pi/kiauh
origin: https://github.com/ShohninDmitriy/kiauh.git

#[update_manager Config]
#type: git_repo
#path: /home/pi/klipper_config
#origin: https://github.com/ShohninDmitriy/klipper_config.git

[power psu]
type: gpio
pin: !gpio21
initial_state: on
#off_when_shutdown: True
locked_while_printing: True
restart_klipper_when_powered: False
restart_delay: 1.

[power pi]
type: gpio
pin: !gpio20
initial_state: on
off_when_shutdown: False
locked_while_printing: True

[timelapse]
enabled: 1
# Если это значение равно False, макросы Gcode игнорируются, а автоответчик 
# отключается в конце печати. Идея состоит в том, чтобы отключить плагин по
# умолчанию и активировать его только во время выполнения через конечную
# точку http, если требуется временной интервал.
autorender: True
# Если это значение равно False, в конце печати автоответчик отключается.
constant_rate_factor: 17
# Диапазон шкалы CRF составляет 0-51, где 0-без потерь, 23-по умолчанию
# и 51-наихудшее возможное качество. Более низкое значение обычно приводит
# к более высокому качеству, а субъективно разумный диапазон составляет 17-28.
# дополнительная информация: https://trac.ffmpeg.org/wiki/Encode/H.264
output_framerate: 25
# Выходная частота кадров сгенерированного видео
output_path: /home/pi/klipper_config/timelapse/
# Путь, по которому будет сохранено сгенерированное видео
frame_path: /tmp/timelapse/
# Путь, по которому сохраняются временные кадры
time_format_code: %Y%m%d_%H%M
# Манипулирует форматом даты и времени выходного файла
# see: https://docs.python.org/3/library/datetime.html#strftime-and-strptime-format-codes
snapshoturl: http://192.168.0.27/capture
# url-адрес вашего веб-потока
pixelformat: yuv420p
# установите pixelformat для выходного видео по умолчанию на yuv420p,
# потому что, например. yuvj422p не будет воспроизводиться на большинстве
# смартфонов или старых медиаплееров
extraoutputparams: -filter_complex "[0]trim=0:3[hold];[0][hold]concat[extended];[extended][0]overlay"
# здесь вы можете добавить выходные параметры в FFMPEG дополнительную
# информацию: https://ffmpeg.org/ffmpeg.html например, поворот видео на 180°
# "-vf transpose=2,transpose=2" или повторите последний кадр в течение 5 секунд:
# -filter_complex "[0]trim=0:5[hold];[0][hold]concat[extended];[extended][0]overlay"
