[firmware_retraction]
retract_length: 0.9
unretract_extra_length: 0
retract_speed: 70
unretract_speed: 40

#####################################################################
# 	Macro
#####################################################################
[gcode_macro _FILAMENT_BALL]
description: Helper: Round the filament tip
gcode:
  # set default parameter value
  {% set wait = params.WAIT|default(0) %}
  SAVE_GCODE_STATE NAME=STATE_FILAMENT_BALL
  # Сверните кончик нити
  # обнулить экструдер
  G92 E0
  # абсолютная экструзия
  M82
  G1 E1 F120  ;2
  G1 E0 F3600
  G1 E3 F120  ;4
  G1 E0 F3600
  G1 E6 F120  ;8
  G1 E0 F3600
  # относительная экструзия
  M83
  G1 E-25 F3600
  G4 P{wait|int * 100}
  RESTORE_GCODE_STATE NAME=STATE_FILAMENT_BALL

[gcode_macro FILAMENT_LOAD]
description: Load filament and disable rounout while running
gcode:
  # сохранить минимальную температуру экструзии в переменной
  {% set minTemp = printer.configfile.settings["extruder"]["min_extrude_temp"] %}
  {% if printer.idle_timeout.state != "Printing" or printer.pause_resume.is_paused|lower == "true" %}
    SAVE_GCODE_STATE NAME=STATE_LOAD_FILAMENT
    {% if 'filament_motion_sensor runout' in printer.configfile.settings %}
      SET_FILAMENT_SENSOR SENSOR=runout ENABLE=0
    {% endif %}
    ## Переместить в мусорный бак
    # домой, если еще не дома
    _CG28
    # абсолютное позиционирование
    G90
    # парковать насадку у бункера для щеток
    G0 X0 Y5 F15000
    # проверьте, что температура экструдера выше минимальной температуры экструзии
    {% set extruder_target = printer.extruder.target %}
    _LCD_KNOB COLOR=BLUE
    {% if extruder_target|int < minTemp|int %}
      {action_respond_info("Extruder Temp to low heat to %2dC" % (minTemp|int + 60))}
      # нагреть экструдер и ждать
      M109 S{minTemp|int + 60}
    {% endif %}
    _LCD_KNOB COLOR=RESTORE
    # установить экструдер на относительный
    M83
    G1 E5 F180
    # быстрая загрузка 125 мм нити
    G1 E125 F1800
    # более медленная экструзия для хотэнда
    G1 E20 F120
    # втянуть
    G1 E-2 F1500 
    SAVE_VARIABLE VARIABLE=filament_loaded VALUE='"true"'
    # очистка сопла
    _WIPE
    G0 Z5 F1800
    # парковать насадку у бункера для щеток
    G0 X0 Y0 F15000
    # восстановить предыдущую температуру экструдера
    M109 S{extruder_target}
    M104 S{extruder_target}
    {% if 'filament_motion_sensor runout' in printer.configfile.settings %}
      _PRINT_AR T="RUNOUT Motion Sensor Enable: true"
      SET_FILAMENT_SENSOR SENSOR=runout ENABLE=1
    {% endif %}
    _PRINT_AR T="Filament loaded"
    RESTORE_GCODE_STATE NAME=STATE_LOAD_FILAMENT
  {% else %}
    _PRINT_AR T="Filament loading disabled while printing!"
  {% endif %}
 
[gcode_macro FILAMENT_UNLOAD]
description: Unload filament and disable rounout while running
gcode:
  # variable for the unload distance
  {% set dist = 150 %}
  # сохранить минимальную температуру экструзии в переменной
  {% set minTemp = printer.configfile.settings["extruder"]["min_extrude_temp"] %}
  {% if printer.idle_timeout.state != "Printing" or printer.pause_resume.is_paused|lower == "true" %}
    SAVE_GCODE_STATE NAME=STATE_UNLOAD_FILAMENT
    {% if 'filament_motion_sensor runout' in printer.configfile.settings %}
      _PRINT_AR T="RUNOUT Motion Sensor Enable: false"
      SET_FILAMENT_SENSOR SENSOR=runout ENABLE=0
    {% endif %}
    _LCD_KNOB COLOR=BLUE
    _CG28
    # абсолютное позиционирование
    G90
    # парковать насадку у бункера для щеток
    G0 X0 Y5 F15000
    # проверьте, что температура экструдера выше минимальной температуры экструзии
    {% set extruder_target = printer.extruder.target %}
    {% if extruder_target|int < minTemp|int %}
      {action_respond_info("Extruder Temp to low heat to %2dC" % (minTemp|int + 30))}
      # нагреть экструдер и ждать
      M109 S{minTemp|int + 30}
    {% endif %}
    # Сверните кончик нити и втяните его за шестерни экструдера.
    _LCD_KNOB COLOR=RESTORE
    _FILAMENT_BALL WAIT=3
    # Относительная экструзия
    M83
    G1 E{dist|float * -1} F3000
    M400
    SAVE_VARIABLE VARIABLE=filament_loaded VALUE='"false"'
    # восстановить предыдущую температуру экструдера
    M109 S{extruder_target}
    M104 S{extruder_target}
    _PRINT_AR T="Filament unloaded"
    RESTORE_GCODE_STATE NAME=STATE_UNLOAD_FILAMENT
  {% else %}
    _PRINT_AR T="Filament unloading disabled while printing!"
  {% endif %} 

## продуть и очистить сопло перед печатью       
[gcode_macro NOZZLECLEAN]
gcode:
  # сохранить минимальную температуру экструзии в переменной
  {% set minTemp = printer.configfile.config["extruder"]["min_extrude_temp"] %}
  SAVE_GCODE_STATE Name=STATE_NOZZLECLEAN
  _PRINT_AR T="Clean Nozzle" SHOW_LCD=true
  _CG28
  G90
  # перейти к месту продувки ведра
  G0 X0 Y5 F15000
  # проверьте, что температура экструдера выше минимальной температуры экструзии
  {% set extruder_target = printer.extruder.target %}
  {% if printer.extruder.temperature|int < minTemp|int %}
    _PRINT_AR T="{"Extruder Temp to low heat to %2dC" % (minTemp|int + 50)}"
    M109 S{minTemp|int + 50}
  {% endif %}
  G0 Z2.5 F900
  G92 E0
  M83
  G1 E5.00 F100
  G1 E5.00 F200
  G1 E-0.8 F800
  G4 P500
  _WIPE
  # восстановить предыдущую температуру экструдера
  M109 S{extruder_target}
  M104 S{extruder_target}
  UPDATE_DELAYED_GCODE ID=_CLEAR_DISPLAY DURATION=1
  RESTORE_GCODE_STATE Name=STATE_NOZZLECLEAN

[gcode_macro _WIPE]
gcode:
  G90
  # перейти в положение пуска стеклоочистителя
  G92 E0
  G0 X35 Y8 Z0.5 F15000
  G92 E0
  G1 E5 F120
  G92 E0
  G1 E-0.5 F2400
  G92 E0
  G4 P500
  G0 X35 Y13 Z6.5 F15000
  #G0 X5.00 Y270 Z1.5 F3000
  ## переместите голову по диагонали к кисти
  #{% for wipe in range(5) %}
  #  {% for coordinate in [(25,270),(5,270)] %}
  #    G0 X{coordinate[0]} Y{coordinate[1] + 1.0 * wipe} F{6000 + 1000 * wipe}
  #  {% endfor %}
  #{% endfor %}
    
[gcode_macro PRIME_LINE]
gcode:
  # define values for easiermodification
  {% set seg = 11 %}
  {% set lenght = 220 %}
  {% set extrude = 17 %}
  SAVE_GCODE_STATE NAME=STATE_PRIME_LINE
  # рассчитать значения каждого сегмента
  {% set y_seg = lenght|float / seg|float %}
  {% set e_seg = extrude|float / seg|float %}
  _PRINT_AR T="Prime Line" SHOW_LCD=true
  _CG28                                  ; home if not already homed
  G92 E0                                 ; reset Extruder
  G90                                    ; absolute positioning
  G0 X35 Y30 Z1 F15000.0                 ; move to start position
  G0 Z0.25 F900                          ; move Z Axis down
  M83                                    ; relative extrusion
  G91                                    ; relative positioning
  {% for segment in range(seg|int-1) %}  ; draw the first line
    G1 Y{y_seg} E{e_seg} F1500.0
  {% endfor %}    
  G0 X0.42                               ; move to side
  {% for segment in range(seg|int-1) %}  ; draw the second line
    G1 Y-{y_seg} E{e_seg} F1500.0
  {% endfor %}
  G92 E0
  UPDATE_DELAYED_GCODE ID=_CLEAR_DISPLAY DURATION=1
  RESTORE_GCODE_STATE NAME=STATE_PRIME_LINE

[gcode_macro SELECT_PA]
description: Set PA depending on nozzle and filament 
gcode:
  # set default parameter values
  {% set nozzle = params.NOZZLE|default(0.4)|float %}
  {% set filament = params.FILAMENT|default('None')|string %}
  #####   Pressure Advance values for different filaments & nozzles #####
  {% set pa_def = [('ABS', 0.4, 0.0525),
                   ('NYLON', 0.4, 0.0725),
                   ('PETG', 0.4, 0.07)] %}
  #######################################################################
  {% set elem_cnt = pa_def|length %}
  {% set ns = namespace(index = elem_cnt) %}
  {% for index in range(elem_cnt) %}
     {% if pa_def[index][0]|lower == filament|lower and pa_def[index][1]|float == nozzle %}
       {% set ns.index = index %}
    {% endif %}
  {% endfor %}
  {% if ns.index < elem_cnt %}
    {% set elem_filament = pa_def[ns.index][0]|string %}
    {% set elem_nozzle = pa_def[ns.index][1]|float %}
    {% set elem_pa = pa_def[ns.index][2]|float %}
  {% else %}
    {% set elem_filament = 'default' %}
    {% set elem_nozzle = 0.4 %}
    {% set elem_pa =  printer.configfile.settings['extruder'].pressure_advance|float %}
  {% endif %}
  SET_PRESSURE_ADVANCE ADVANCE={elem_pa}
  {action_respond_info("PRESSURE_ADVANCE:
                        FILAMENT: %s
                        NOZZLE: %1.1f
                        VALUE: %.4f" % (elem_filament, elem_nozzle, elem_pa))}