[firmware_retraction]
retract_length: 0.48
unretract_extra_length: 0.02
retract_speed: 25
unretract_speed: 20

#####################################################################
# 	Macro
#####################################################################
[gcode_macro _FILAMENT_BALL]
description: Helper: Round the filament tip
gcode:
  ##### установите значение параметра по умолчанию #####
  {% set wait = params.WAIT|default(0) %}
  ##### конец определений #####
  SAVE_GCODE_STATE NAME=STATE_FILAMENT_BALL
  # Сверните кончик нити
  # обнулить экструдер
  G92 E0
  # абсолютная экструзия
  M82
  G1 E2 F120  ;2
  G1 E0 F3600
  G1 E4 F180  ;4
  G1 E0 F3600
  G1 E8 F240  ;8
  G1 E0 F3600
  # относительная экструзия
  M83
  G1 E-25 F3600
  G4 P{wait|int * 100}
  RESTORE_GCODE_STATE NAME=STATE_FILAMENT_BALL

[gcode_macro LOAD_FILAMENT]
description: Load filament and disable rounout while running
gcode:
  ##### Получить пользовательские настройки #####
  {% set add_temp = printer['gcode_macro _USER_VARIABLE'].extruder_min_add|int %}
  {% set load = printer['gcode_macro _USER_VARIABLE'].load_distance %}
  {% set extrude = printer['gcode_macro _USER_VARIABLE'].load_extrude %}
  {% set retreact = printer['gcode_macro _USER_VARIABLE'].retreact_end|float * -1 %}
  {% set purge_pos = printer['gcode_macro _USER_VARIABLE'].purge %}
  {% set z_hop = printer['gcode_macro _USER_VARIABLE'].z_hop %}
   ##### Получить задействованное оборудование #####
  {% set ena_neo = printer['gcode_macro _USER_VARIABLE'].neo_display|lower %}
  {% set ena_runout = printer['gcode_macro _USER_VARIABLE'].runout|lower %}
  ##### получить положение стола #####
  {% set act_z = printer.toolhead.position.z|float %}
  ##### сохраните температуру экструдера #####
  {% set minTemp = printer.configfile.settings.extruder.min_extrude_temp|int + add_temp %}
  {% set extruder_target = printer.extruder.target %}
  ##### calc movement high #####
  {% if act_z < z_hop %}
    {% set move_z = z_hop %}
  {% else %}
    {% set move_z = act_z %}
  {% endif %}
  ##### конец определений #####
  {% if printer.idle_timeout.state != "Printing" or printer.pause_resume.is_paused|lower == "true" %}
    SAVE_GCODE_STATE NAME=STATE_LOAD_FILAMENT
    ## Move to waste bin
    _CG28                                    ; home if not already homed
    G90                                      ; absolute positioning
    #G0 Z{move_z} F600                       ; move head to minimum
    G0 X{purge_pos[0]} Y{purge_pos[1]} F18000 ; move to purge bucket location
    {% if ena_neo == 'true' %} _LCD_KNOB COLOR=BLUE {% endif %}
    {% if printer.extruder.can_extrude|lower == 'false' %}
      {action_respond_info("Extruder Temp to low heat to %2dC" % minTemp)}
      M104 S{minTemp} ; heat extruder and wait
      TEMPERATURE_WAIT SENSOR=extruder MINIMUM={minTemp|int}
    {% endif %}
    {% if ena_neo == 'true' %} _LCD_KNOB COLOR=RESTORE {% endif %}
    #G0 Z{purge_pos[2]} F600
    M83                  ; set extruder to relative
    G1 E{load} F1800     ; quickly load filament
    G1 E{extrude} F120   ; slower extrusion for hotend path
    G1 E{retreact} F1500 ; retract
    SAVE_VARIABLE VARIABLE=filament_loaded VALUE='"true"'
    # очистка сопла
    _WIPE
    G0 Z{move_z} F600
    G0 X{purge_pos[0]} Y{purge_pos[1]} F18000 ; move to purge bucket location
    # восстановите старую температуру экструдера
    M104 S{extruder_target}
    TEMPERATURE_WAIT SENSOR=extruder MINIMUM={extruder_target|int}
    _PRINT_AR T="Filament loaded"
    RESTORE_GCODE_STATE NAME=STATE_LOAD_FILAMENT
  {% else %}
    _PRINT_AR T="Filament loading disabled while printing!"
  {% endif %}
 
[gcode_macro UNLOAD_FILAMENT]
description: Unload filament and disable rounout while running
gcode:
  ##### Получить пользовательские настройки #####
  {% set add_temp = printer['gcode_macro _USER_VARIABLE'].extruder_min_add|int %}
  {% set unload = printer['gcode_macro _USER_VARIABLE'].unload_distance %}
  ##### Получить задействованное оборудование #####
  {% set ena_neo = printer['gcode_macro _USER_VARIABLE'].neo_display|lower %}
  {% set ena_runout = printer['gcode_macro _USER_VARIABLE'].runout|lower %}
  ##### сохраните температуру экструдера #####
  {% set minTemp = printer.configfile.settings.extruder.min_extrude_temp|int + add_temp %}
  {% set extruder_target = printer.extruder.target %}
  ##### конец определений #####
  {% if printer.idle_timeout.state != "Printing" or printer.pause_resume.is_paused|lower == "true" %}
    SAVE_GCODE_STATE NAME=STATE_UNLOAD_FILAMENT
    {% if ena_neo == 'true' %} _LCD_KNOB COLOR=BLUE {% endif %}
    {% if printer.extruder.can_extrude|lower == 'false' %}
      {action_respond_info("Extruder Temp to low heat to %2dC" % minTemp)}
      M104 S{minTemp} ; heat extruder and wait
      TEMPERATURE_WAIT SENSOR=extruder MINIMUM={minTemp|int}
    {% endif %}
    # Ball up the filament tip and retract out past the extruder gears
    {% if ena_neo == 'true' %} _LCD_KNOB COLOR=RESTORE {% endif %}
    _FILAMENT_BALL WAIT=3
    M83 ; Relative extrusion
    G1 E-{unload} F3000
    M400
    SAVE_VARIABLE VARIABLE=filament_loaded VALUE='"false"'
    # восстановить предыдущую температуру экструдера
    M104 S{extruder_target}
    TEMPERATURE_WAIT SENSOR=extruder MINIMUM={extruder_target|int}
    _PRINT_AR T="Filament unloaded"
    RESTORE_GCODE_STATE NAME=STATE_UNLOAD_FILAMENT
  {% else %}
    _PRINT_AR T="Filament unloading disabled while printing!"
  {% endif %}

## продуть и очистить сопло перед печатью
[gcode_macro NOZZLECLEAN]
description: Move to bucket and scrub nozzle
gcode:
  ##### Получить пользовательские настройки #####
  {% set add_temp = printer['gcode_macro _USER_VARIABLE'].extruder_min_add|int %}
  {% set purge_pos = printer['gcode_macro _USER_VARIABLE'].purge %}
  {% set z_hop = printer['gcode_macro _USER_VARIABLE'].z_hop %}
  ##### сохраните температуру экструдера #####
  {% set minTemp = printer.configfile.settings.extruder.min_extrude_temp|int + add_temp %}
  {% set extruder_target = printer.extruder.target %}
  ##### получить положение стола #####
  {% set act_z = printer.toolhead.position.z|float %}
  ##### конец определений #####
  SAVE_GCODE_STATE Name=STATE_NOZZLECLEAN
  _PRINT_AR T="Clean Nozzle" SHOW_LCD=true
  _CG28                                    ; home if not already homed
  G90                                      ; absolute positioning
  {% if act_z < z_hop %}
    G0 Z{z_hop} F600                       ; move head up
  {% endif %}
  G0 X{purge_pos[0]} Y{purge_pos[1]} F18000 ; move to purge bucket location
  {% if printer.extruder.can_extrude|lower == 'false' %}
      {action_respond_info("Extruder Temp to low heat to %2dC" % minTemp)}
      M104 S{minTemp}      ; heat extruder and wait
      TEMPERATURE_WAIT SENSOR=extruder MINIMUM={minTemp|int}
  {% endif %}
  #G0 Z{purge_pos[2]} F600 ; lower Z
  G92 E0                   ; reset Extruder
  M83                      ; relative extrusion
  G1 E5.00 F200            ; purge filament (5mm)
  G1 E5.00 F200            ; purge filament (5mm)
  G1 E-0.5 F1800           ; retract filament (0.5)
  G4 P500
  _WIPE
  # восстановить предыдущую температуру экструдера
  M104 S{extruder_target}
  UPDATE_DELAYED_GCODE ID=_CLEAR_DISPLAY DURATION=1
  RESTORE_GCODE_STATE Name=STATE_NOZZLECLEAN

[gcode_macro _WIPE]
gcode:
  ##### Получить пользовательские настройки #####
  {% set wipe_cnt = printer['gcode_macro _USER_VARIABLE'].wipe_cnt|int %}
  {% set wipe_start_pos = printer['gcode_macro _USER_VARIABLE'].wipe_start %}
  {% set wipe_end_pos = printer['gcode_macro _USER_VARIABLE'].wipe_end %}
  {% set wipe_offset = printer['gcode_macro _USER_VARIABLE'].wipe_offset|float %}
  ##### конец определений #####
  G90 ; absolute positioning
  #G0 X{wipe_start_pos[0]} Y{wipe_start_pos[1]} Z{wipe_start_pos[2]} F4000
  G0 X{wipe_start_pos[0]} Y{wipe_start_pos[1]} F9000
  # переместите головку по диагонали, чтобы почистить
  {% for wipe in range(0, wipe_cnt) %}
    {% for coordinate in [wipe_start_pos[0], wipe_end_pos[0]] %}
      G0 X{coordinate} Y{wipe_start_pos[1] + wipe_offset * wipe} F9000
    {% endfor %}
  {% endfor %}
  #G0 X{wipe_end_pos[0]} Y{wipe_end_pos[1]} Z{wipe_end_pos[2]} F4000
  G0 X{wipe_end_pos[0]} Y{wipe_end_pos[1]} F9000
    
[gcode_macro PRIME_LINE]
gcode:
  ##### Получить пользовательские настройки #####
  {% set start_xy = printer['gcode_macro _USER_VARIABLE'].prime_start_xy %}
  {% set dir = printer['gcode_macro _USER_VARIABLE'].prime_dir|string %}
  {% set lenght = printer['gcode_macro _USER_VARIABLE'].prime_lenght|float %}
  {% set seg = printer['gcode_macro _USER_VARIABLE'].prime_seg|int %}
  {% set extrude_per_seg = printer['gcode_macro _USER_VARIABLE'].prime_extrude_per_seg|float %}
  {% set prime_z = printer['gcode_macro _USER_VARIABLE'].prime_z|float %}
  {% set move_between_lines = printer['gcode_macro _USER_VARIABLE'].prime_dist|float %}
  {% set z_hop = printer['gcode_macro _USER_VARIABLE'].z_hop|float %}
  ##### get parameter and set default #####
  {% set prime_height = params.PRIME_HEIGHT|default(prime_z)|float %}
  ##### получить положение стола #####
  {% set act_z = printer.toolhead.position.z|float %}
  ##### вычисление перемещений простых линий #####
  {% set seg_delta = lenght / seg %}
  {% if dir == 'X+' %}
    {% set first_line = 'X%s E%s F1200' % (seg_delta, extrude_per_seg) %}
    {% set second_line = 'X-%s E%s F1200' % (seg_delta, extrude_per_seg) %}
    {% set move_to_side = 'Y%s' % (move_between_lines) %}
  {% elif dir == 'X-' %}
    {% set first_line = 'X-%s E%s F1200' % (seg_delta, extrude_per_seg) %}
    {% set second_line = 'X%s E%s F1200' % (seg_delta, extrude_per_seg) %}
    {% set move_to_side = 'Y%s' % (move_between_lines) %}
  {% elif dir == 'Y+' %}
    {% set first_line = 'Y%s E%s F1200' % (seg_delta, extrude_per_seg) %}
    {% set second_line = 'Y-%s E%s F1200' % (seg_delta, extrude_per_seg) %}
   {% set move_to_side = 'X%s' % (move_between_lines) %}
  {% elif dir == 'Y-' %}
    {% set first_line = 'Y-%s E%s F1200' % (seg_delta, extrude_per_seg) %}
    {% set second_line = 'Y%s E%s F1200' % (seg_delta, extrude_per_seg) %}
    {% set move_to_side = 'X%s' % (move_between_lines) %}
  {% else %}
    {action_raise_error("_USER_VARIABLE.prime_dir is not spezified as X+, X-, Y+ or Y-")}
  {% endif %}
  ##### конец определений #####
  _PRINT_AR T="Prime Line" SHOW_LCD=true
  _CG28                                   ; home if not already homed
  G92 E0                                  ; reset Extruder
  G90                                     ; absolute positioning
  {% if act_z < z_hop %}
    G0 Z{z_hop} F600                      ; move head up
  {% endif %}
  G0 X{start_xy[0]} Y{start_xy[1]} F18000 ; move to start position
  G0 Z{prime_height} F600                 ; move Z Axis down
  G91                                     ; relative positioning
  {% for segment in range(seg) %}         ; draw the first line
    G1 {first_line}
  {% endfor %}
  G1 {move_to_side}                       ; move to side
  {% for segment in range(seg) %}         ; draw the second line
    G1 {second_line}
  {% endfor %}
  #G0 Z{z_hop} F600                       ; move Z Axis up
  G92 E0                                  ; reset Extruder
  UPDATE_DELAYED_GCODE ID=_CLEAR_DISPLAY DURATION=1

[gcode_macro M900]
description: Set pressure advance
gcode:
  SET_PRESSURE_ADVANCE ADVANCE={params.K|default(0)}

[gcode_macro SELECT_PA]
description: Set PA depending on nozzle and filament
gcode:
  ##### установите значение параметра по умолчаниюs #####
  {% set nozzle = params.NOZZLE|default(0.4)|float %}
  {% set filament = params.FILAMENT|default('None')|string %}
  #####   Значения Pressure Advance для различных нитей и сопел #####
  {% set pa_def = [('ABS', 0.4, 0.043),
                   ('HIPS', 0.4, 0.043),
                   ('NYLON', 0.4, 0.04525),
                   ('TPU', 0.4, 0.2),
                   ('PETG', 0.4, 0.04)] %}
  #######################################################################
  {% set elem_cnt = pa_def|length %}
  {% set ns = namespace(index = elem_cnt) %}
  {% for index in range(elem_cnt) %}
     {% if pa_def[index][0]|lower == filament|lower and pa_def[index][1]|float == nozzle %}
       {% set ns.index = index %}
    {% endif %}
  {% endfor %}
  {% if ns.index < elem_cnt %}
    {% set elem_filament = pa_def[ns.index][0]|string %}
    {% set elem_nozzle = pa_def[ns.index][1]|float %}
    {% set elem_pa = pa_def[ns.index][2]|float %}
  {% else %}
    {% set elem_filament = 'default' %}
    {% set elem_nozzle = 0.4 %}
    {% set elem_pa =  printer.configfile.settings['extruder'].pressure_advance|float %}
  {% endif %}
  ##### конец определений #####
  SET_PRESSURE_ADVANCE ADVANCE={elem_pa}
  {action_respond_info("PRESSURE_ADVANCE:
                        FILAMENT: %s
                        NOZZLE: %1.1f
                        VALUE: %.4f" % (elem_filament, elem_nozzle, elem_pa))}
