[filament_switch_sensor runout]
#   When set to True, a PAUSE will execute immediately after a runout
#   is detected. Note that if pause_on_runout is False and the
#   runout_gcode is omitted then runout detection is disabled. Default
#   is True.
pause_on_runout: FALSE
runout_gcode:
  {action_respond_info("RUNOUT Sensor: Filament runout")}
	PAUSE
insert_gcode:
	{action_respond_info("RUNOUT Sensor: Filament inserted")}
#   The minimum amount of time in seconds to delay between events.
#   Events triggered during this time period will be silently
#   ignored. The default is 3 seconds.
#event_delay: 3.0
#   The amount of time to delay, in seconds, between the pause command
#   dispatch and execution of the runout_gcode. It may be useful to
#   increase this delay if OctoPrint exhibits strange pause behavior.
#   Default is 0.5 seconds.
#pause_delay: 0.5
##    XYE mcu E0DET
switch_pin: ^!P1.26

#####################################################################
# 	Macro
#####################################################################
[gcode_macro _RUNOUT_INFO]
gcode:
  {% set enable = printer['filament_switch_sensor runout'].enabled %}
  {% set detect = printer['filament_switch_sensor runout'].filament_detected %}
  {action_respond_info("RUNOUT Sensor: 
                        Enabled: %s
                        Detect Filament: %s" % (enable|lower,detect|lower))}

[gcode_macro M600]
default_parameter_X: 50
default_parameter_Y: 0
gcode:
  SAVE_GCODE_STATE NAME=BASE_M600
  ##### calculate save lift position #####
  {% set max_z = printer.toolhead.axis_maximum.z|float %}
  {% set act_z = printer.toolhead.position.z|float %}
  {% if act_z < (max_z - 2.0) %}
    {% set z_safe = 2.0 %}
  {% else %}
    {% set z_safe = max_z - act_z %}
  {% endif %}
    PAUSE
    G91
    G1 E-.8 F2700
    G1 Z{z_safe}
    G90
    G1 X{X} Y{Y} F3000
    G91
    G1 E-50 F1000
    RESTORE_GCODE_STATE NAME=BASE_M600
 
#####################################################################
# 	LCD Menu
#####################################################################   
[menu __main __control __runoutonoff]
type: input
enable: {'filament_switch_sensor runout' in printer}
name: Runout: {'ON ' if menu.input else 'OFF'}
input: {printer['filament_switch_sensor runout'].enabled}
input_min: 0
input_max: 1
input_step: 1
index: 4
gcode:
  SET_FILAMENT_SENSOR SENSOR=runout ENABLE={menu.input|int}