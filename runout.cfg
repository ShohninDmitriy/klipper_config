##[filament_switch_sensor runout]
# Если установлено значение True, PAUSE будет выполняться сразу после обнаружения.
# Обратите внимание, что если pause_on_runout имеет значение False и runout_gcode опущен,
# обнаружение биения отключено. По умолчанию True.
##pause_on_runout: FALSE
##runout_gcode:
##  {action_respond_info("RUNOUT Sensor: Filament runout")}
##	PAUSE
##insert_gcode:
##	{action_respond_info("RUNOUT Sensor: Filament inserted")}
#   Минимальное время задержки между событиями в секундах.
# События, запущенные в этот период времени, будут игнорироваться.
# По умолчанию - 3 секунды.
#event_delay: 3.0
#   Время задержки в секундах между отправкой команды паузы и выполнением runout_gcode.
#   Может быть полезно увеличить эту задержку, если OctoPrint демонстрирует странное поведение паузы.
#   По умолчанию 0,5 секунды.
#pause_delay: 0.5
#    XYE mcu E0DET
##switch_pin: !P1.24

#####################################################################
# 	Macro
#####################################################################
[gcode_macro _RUNOUT_INFO]
gcode:
  {% set enable = printer['filament_switch_sensor runout'].enabled %}
  {% set detect = printer['filament_switch_sensor runout'].filament_detected %}
  {action_respond_info("RUNOUT Sensor: 
                        Enabled: %s
                        Detect Filament: %s" % (enable|lower,detect|lower))}

[gcode_macro M600]
gcode:
  PAUSE   ; все необходимое определено там
 
#####################################################################
# 	ЖК-меню
#####################################################################   
[menu __main __control __runoutonoff]
type: input
enable: {'filament_switch_sensor runout' in printer}
name: Runout: {'ON ' if menu.input else 'OFF'}
input: {printer['filament_switch_sensor runout'].enabled}
input_min: 0
input_max: 1
input_step: 1
index: 4
gcode:
  SET_FILAMENT_SENSOR SENSOR=runout ENABLE={menu.input|int}
