#####################################################################
#  Подготовка
#####################################################################
## скопируйте этот файл в тот же каталог, что и ваш printer.cfg
## Добавить
##    [include flexplate.cfg]
## в ваш printer.cfg
##
## Необходим блок [save_variables], поскольку необходимо использовать переменную сохранения принтера, чтобы она была доступна после включения.
## Вы можете пропустить это, если у вас уже есть блок конфигурации [save_variables]
## например:
##    [save_variables]
##    filename: /home/pi/klipper_config/.variables.stb
## Мне нравится скрывать этот файл, поскольку в нем нет ничего, что нужно было бы изменить.
## Выполните перезапуск klipper после добавления материала выше
##
## После того, как клиппер вернется, введите
##     _INIT_PLATE_ARRAY
## в консоли для инициализации необходимых переменных
## Это все, что вам нужно сделать для начальной настройки
##
#####################################################################
#  Консоль обычного использования
#####################################################################
## Инициализации массива              : _INIT_PLATE_ARRAY (одноразовое действие)
## Перечислить все тарелки            : _LIST_PLATES
## Изменить активнуюпластину          : _SET_PLATE INDEX=0 (любой порядковый номер)
## Добавить новую пластину            : _ADD_NEW_PLATE
## Удалить активную пластину          : _REMOVE_PLATE
## Изменить смещение рабочей пластины : _CHANGE_PLATE_OFFSET OFFSET=0.001 (любое новое смещение) 
## Изменить имя активной пластины     : _CHANGE_PLATE_NAME Name=test (любое новое имя) 
##
#####################################################################
#  Обычное использование ЖК-меню
#####################################################################
## вы можете делать все, что указано выше, за исключением табличек со списком (не требуется)
## изменение имени не реализовано, так как я не знаю, как сделать именование на ЖК-дисплее
## Видимость пунктов меню зависит от состояния принтера.
##
#####################################################################
#  Получите offset_z и имя для собственного использования
#####################################################################
## использовать:  
##   {% set plate_offset_z = printer.save_variables.variables.plate_array[printer.save_variables.variables.plate_index|int][1] %}
##   {% set plate_name = printer.save_variables.variables.plate_array[printer.save_variables.variables.plate_index|int][0] %}
## получить нужный параметр активной пластины
##
#####################################################################
#  Macros
#####################################################################
## Начальное смещение пластины при запуске клиппера
[delayed_gcode _DELAY_INIT_PLATE]
initial_duration: 1
gcode:
  {% if not printer.save_variables.variables.plate_array %}
    {action_respond_info("FLEXPLATE: No Plate Array defined, please run  _INIT_PLATE_ARRAY")}
  {% else %}
    _DISPLAY_PLATE TEXT='Init'
    _SET_PLATE_OFFSET MOVE='false'
  {% endif %}
  
# выполнить смещение gcode фактической пластины
# !!! старые смещения будут обнулены !!!
# использовать:  _SET_PLATE_OFFSET MOVE='false'
[gcode_macro _SET_PLATE_OFFSET]
gcode:
  # set default parameter value
  {% set move = params.MOVE|default('true') %}
  {% if not printer.save_variables.variables.plate_array %}
    {action_respond_info("FLEXPLATE:No Plate Array defined, please run _INIT_PLATE_ARRAY")}
  {% else %}
    {% set plates = printer.save_variables.variables.plate_array %}
    {% set index = printer.save_variables.variables.plate_index|int %}
    {% set plate_offset_z = plates[index][1] %}
    SET_GCODE_OFFSET Z=0
    {% if move == 'true' %}
      SET_GCODE_OFFSET Z_ADJUST={plate_offset_z|float} MOVE=1
    {% else %}
      SET_GCODE_OFFSET Z_ADJUST={plate_offset_z|float}
    {% endif %}
  {% endif %}
  
# показывает активную пластину и смещение в консоли и на дисплее
# использовать: _DISPLAY_PLATE TEXT='Set'
[gcode_macro _DISPLAY_PLATE]
gcode:
  # set default parameter value
  {% set text = params.TEXT|default('Used') %}
  {% if not printer.save_variables.variables.plate_array %}
    {action_respond_info("FLEXPLATE: No Plate Array defined, please run _INIT_PLATE_ARRAY")}
  {% else %}
    {% set plates = printer.save_variables.variables.plate_array %}
    {% set index = printer.save_variables.variables.plate_index|int %}
    {% set plate_offset_z = plates[index][1] %}
    {% set plate_name = plates[index][0] %}
    M117 Plate: {plate_name}
    {action_respond_info("%s Plate: %s --> set z_offset: %01.3fmm" % (text, plate_name|string,plate_offset_z|float))}
    UPDATE_DELAYED_GCODE ID=_CLEAR_DISPLAY DURATION=10
  {% endif %}

# исходный массив, он работает только до тех пор, пока переменные не существуют
# это сделано, чтобы помочь пользователям при установке 
# использовать: _INIT_PLATE_ARRAY
[gcode_macro _INIT_PLATE_ARRAY]
gcode:
  {% if not printer.save_variables.variables.plate_array %}
    {% set array = namespace(output = '') %}
    # klipper не может хранить элементы массивов, поэтому нам нужно манипулировать строкой
    # добавить первый элемент
    {% set element = "[('First', 0.0)]" %}
    {% set array.output = array.output +  element %}
    SAVE_VARIABLE VARIABLE=plate_array VALUE="{array.output}"
    SAVE_VARIABLE VARIABLE=plate_index VALUE=0
  {% else %}
    {action_respond_info("FLEXPLATE: Plate Array alread exists. ABORDED")}
  {% endif %}

# перечислить все тарелки
# использовать: _LIST_PLATES
[gcode_macro _LIST_PLATES]
gcode:
  {% if not printer.save_variables.variables.plate_array %}
    {action_respond_info("FLEXPLATE: No Plate Array defined, please run _INIT_PLATE_ARRAY")}
  {% else %}
    {% set array = namespace(output = '') %}
    {% set plates = printer.save_variables.variables.plate_array %}
    {% set elem_count = plates|length %}
    {% set act_index = printer.save_variables.variables.plate_index|int %}
    {% set element = "Defined Plates:" %}
    {% set array.output = array.output + element + "\n"%}
    {% for index in range(elem_count) %}
      {% set element = "%-10s -> Offset: %01.3fmm -> Index: %-2d" % (plates[index][0], plates[index][1], index) %}
      {% set array.output = array.output + element + "\n"%}
    {% endfor %}
    {% set element = "Active Plate: %s" % (plates[act_index][0]) %}
    {% set array.output = array.output + "\n" + element + "\n"%}
    {action_respond_info("%s" % (array.output))}
  {% endif %}

# установить активную пластину по индексу
# использовать: _SET_PLATE INDEX=0
[gcode_macro _SET_PLATE]
gcode:
  # set default parameter value
  {% set index = params.INDEX|default(0)|int %}
  {% if not printer.save_variables.variables.plate_array %}
    {action_respond_info("FLEXPLATE: No Plate Array defined, please run _INIT_PLATE_ARRAY")}
  {% else %}
    {% set plates = printer.save_variables.variables.plate_array %}
    {% set elem_count = plates|length %}
    # проверка ИНДЕКСА в диапазоне
    {% if (index|int >= 0) and (index|int <= (elem_count-1)) %}
      SAVE_VARIABLE VARIABLE=plate_index VALUE={index|int}
      _DISPLAY_PLATE TEXT='Set'
      # проверка, парковки принтера
      {% if "xyz" in printer.toolhead.homed_axes %}
        _SET_PLATE_OFFSET
      {% else %}
        {action_respond_info("Offset will be appied with next move")}
        _SET_PLATE_OFFSET MOVE='false'
      {% endif %}
    {% else %}
      {action_respond_info("FLEXPLATE: Index out of Range. ABORDED")}
    {% endif %}
  {% endif %}

# добавить новую тарелку в массив
# использовать: _ADD_NEW_PLATE
[gcode_macro _ADD_NEW_PLATE]
gcode:
  {% if not printer.save_variables.variables.plate_array %}
    {action_respond_info("FLEXPLATE: No Plate Array defined, please run _INIT_PLATE_ARRAY")}
  {% else %}
    {% set array = namespace(output = '') %}
    {% set plates = printer.save_variables.variables.plate_array %}
    {% set elem_count = plates|length %}
    # klipper не может хранить элементы массивов, поэтому нам нужно манипулировать строкой
    {% for index in range(elem_count) %}
      {% set element = "('%s', %s), " % (plates[index][0], plates[index][1]) %}
      {% set array.output = array.output + element %}
    {% endfor %}
    # добавить новый элемент
    {% set element = "('New', 0.0)" %}
    {% set array.output = array.output + element %}
    # добавить границы массива
    {% set array.output = "[%s]"% (array.output) %}
    SAVE_VARIABLE VARIABLE=plate_array VALUE="{array.output}"
  {% endif %}
  
# удалить активную пластину из массива
# !!! Активная пластина изменится на первую пластину
# использовать: _REMOVE_PLATE
[gcode_macro _REMOVE_PLATE]
gcode:
  {% if not printer.save_variables.variables.plate_array %}
    {action_respond_info("FLEXPLATE: No Plate Array defined, please run _INIT_PLATE_ARRAY")}
  {% else %}
    {% set array = namespace(output = '') %}
    {% set plates = printer.save_variables.variables.plate_array %}
    {% set act_index = printer.save_variables.variables.plate_index|int %}
    # проверьте, нужно ли удалить последний элемент массива
    {% if act_index == (plates|length - 1) %}
      # последний элемент будет удален    
      {% set elem_count = plates|length - 1 %}
    {% else %}
      {% set elem_count = plates|length %}
    {% endif %}
    # проверьте, содержит ли массив только один элемент
    {% if elem_count <= 1%}
      {action_respond_info("FLEXPLATE: Last Plate can not be deleted. ABORDED")}
    {% else %}
      # klipper не может хранить элементы массивов, поэтому нам нужно манипулировать строкой 
      {% for index in range(elem_count) %}
        {% if index != act_index %}
          {% set element = "('%s', %s)" % (plates[index][0], plates[index][1]) %}
          {% set array.output = array.output + element %}
          # добавить разделитель где необходимо
          {% if index != (elem_count-1) %}
            {% set element = ", " %}
            {% set array.output = array.output + element %}
          {% endif %}
        {% endif %}
      {% endfor %}
      # добавить границы массива
      {% set array.output = "[%s]"% (array.output) %}
      SAVE_VARIABLE VARIABLE=plate_array VALUE="{array.output}"
      SAVE_VARIABLE VARIABLE=plate_index VALUE=0
      _DISPLAY_PLATE TEXT='Set'
      # проверка, парковки принтера
      {% if "xyz" in printer.toolhead.homed_axes %}
        _SET_PLATE_OFFSET
      {% else %}
        {action_respond_info("Offset will be appied with next move")}
        _SET_PLATE_OFFSET MOVE='false'
      {% endif %}
    {% endif %}
  {% endif %}

# изменить смещение фактически выбранной пластины
# использовать: _CHANGE_PLATE_OFFSET OFFSET=0.001
[gcode_macro _CHANGE_PLATE_OFFSET]
gcode:
  # set default parameter value
  {% set offset = params.OFFSET|default(0.0)|float %}
  {% if not printer.save_variables.variables.plate_array %}
    {action_respond_info("FLEXPLATE: No Plate Array defined, please run _INIT_PLATE_ARRAY")}
  {% else %}
    {% set array = namespace(output = '') %}
    {% set plates = printer.save_variables.variables.plate_array %}
    {% set elem_count = plates|length %}
    {% set act_index = printer.save_variables.variables.plate_index|int %}
    # klipper не может хранить элементы массивов, поэтому нам нужно манипулировать строкой 
    {% for index in range(elem_count) %}
      # проверить элемент для изменения
      {% if index == act_index %}
        {% set element = "('%s', %s)" % (plates[index][0], offset) %}
      {% else %}
        {% set element = "('%s', %s)" % (plates[index][0], plates[index][1]) %}
      {% endif %}
      {% set array.output = array.output + element %}
      # добавить разделитель где необходимо
      {% if index != (elem_count-1) %}
        {% set element = ", " %}
        {% set array.output = array.output + element %}
      {% endif %}
    {% endfor %}
    # добавить границы массива
    {% set array.output = "[%s]"% (array.output) %}
    SAVE_VARIABLE VARIABLE=plate_array VALUE="{array.output}"
    _DISPLAY_PLATE TEXT='Set'
    # проверка, парковки принтера
    {% if "xyz" in printer.toolhead.homed_axes %}
      _SET_PLATE_OFFSET
    {% else %}
      {action_respond_info("Offset will be appied with next move")}
      _SET_PLATE_OFFSET MOVE='false'
    {% endif %}
  {% endif %}
  
# изменить название фактически выбранной пластины
# использовать: _CHANGE_PLATE_NAME Name=test
[gcode_macro _CHANGE_PLATE_NAME]
gcode:
  # set default parameter value
  {% set name = params.NAME|default('New') %}
  {% if not printer.save_variables.variables.plate_array %}
    {action_respond_info("FLEXPLATE: No Plate Array defined, please run _INIT_PLATE_ARRAY")}
  {% else %}
    {% set array = namespace(output = '') %}
    {% set plates = printer.save_variables.variables.plate_array %}
    {% set elem_count = plates|length %}
    {% set act_index = printer.save_variables.variables.plate_index|int %}
    # klipper не может хранить элементы массивов, поэтому нам нужно манипулировать строкой
    {% for index in range(elem_count) %}
      # проверить элемент для изменения
      {% if index == act_index %}
        {% set element = "('%s', %s)" % (name, plates[index][1]) %}
      {% else %}
        {% set element = "('%s', %s)" % (plates[index][0], plates[index][1]) %}
      {% endif %}
      {% set array.output = array.output + element %}
      # добавить разделитель где необходимо
      {% if index != (elem_count-1) %}
        {% set element = ", " %}
        {% set array.output = array.output + element %}
      {% endif %}
    {% endfor %}
    # добавить границы массива
    {% set array.output = "[%s]"% (array.output) %}
    SAVE_VARIABLE VARIABLE=plate_array VALUE="{array.output}"
  {% endif %}
  
#####################################################################
#  Меню дисплея
#####################################################################
## Выбор FlexPlate
[menu __main __flexplate]
type: list
name: Flexplate
enable: {not printer.idle_timeout.state == "Printing"}
index: 1

[menu __main __flexplate __act]
type: command
name:  Act: {printer.save_variables.variables.plate_array[printer.save_variables.variables.plate_index|int][0]} 
enable: {'plate_array' in printer.save_variables.variables}

[menu __main __flexplate __set]
type: input
name:  Set: {printer.save_variables.variables.plate_array[menu.input|int][0]}
enable: {'plate_array' in printer.save_variables.variables}
input: {printer.save_variables.variables.plate_index|int}
input_min: 0
input_max: {(printer.save_variables.variables.plate|length) - 1}
gcode:
  {%- if menu.event == 'long_click' -%}
    _SET_PLATE INDEX={'%d' % menu.input|int}
  {%- endif -%}

[menu __main __flexplate __setup]
type: list
name: Plate Setup

[menu __main __flexplate __setup __init]
type: command
name:  Init Plate Array 
enable: {'plate_array' not in printer.save_variables.variables}
gcode:
  _INIT_PLATE_ARRAY

[menu __main __flexplate __setup __add]
type: command
name:  Add new Plate 
enable: {'plate_array' in printer.save_variables.variables}
gcode:
  _ADD_NEW_PLATE
  
[menu __main __flexplate __setup __remove]
type: command
name:  Remove active Plate 
enable: {'plate_array' in printer.save_variables.variables}
gcode:
  _REMOVE_PLATE

[menu __main __flexplate __setup __offset]
type: input
name:  Offset:{'%01.3f' % menu.input}
enable: {'plate_array' in printer.save_variables.variables}
input: {printer.save_variables.variables.plate_array[printer.save_variables.variables.plate_index|int][1]}
input_min: -1.0
input_max: 1.0
input_step: 0.001
gcode:
  {%- if menu.event == 'long_click' -%}
    _CHANGE_PLATE_OFFSET OFFSET={'%01.3f' % menu.input|float}
  {%- endif -%}

## no idea how to implement that at the moment
#[menu __main __flexplate __setup __name]
#type: input
#name:  Name:{'%s' % menu.input}
#enable: {'plate_array' in printer.save_variables.variables}
#input: {printer.save_variables.variables.plate_array[printer.save_variables.variables.plate_index|int][0]}
#gcode:
#  {%- if menu.event == 'long_click' -%}
#    _CHANGE_PLATE_NAME NAME={'%f' % menu.input|float}
#  {%- endif -%}