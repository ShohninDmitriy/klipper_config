#####################################################################
#  Bed Mesh Definition
#####################################################################
[bed_mesh]
##  Start end end point of mesh 
mesh_min: 36,4
mesh_max: 376,280
speed: 150
horizontal_move_z: 1.4
probe_count: 15,11
algorithm: bicubic
move_check_distance: 3
split_delta_z: 0.01
mesh_pps: 1,1
bicubic_tension: 0.2

#####################################################################
#  Macros
#####################################################################
## настройка  BED MESH CALIBRATE gcode 
[gcode_macro BED_MESH_CALIBRATE]
description: Perform QGL and bed mesh leveling
rename_existing: BED_MESH_CALIBRATE_BASE
gcode:
  # get params and prepare to send them to the base macro
  {% set get_params = [] %}
  {% for key in params %}
    {% set get_params = get_params.append(key + "=" + params[key])  %}
  {% endfor %}
  _CG28
  G28 Z
  BED_MESH_CLEAR
  _SET_ACC VAL=HOME
  SERVO_ON
  BED_MESH_CALIBRATE_BASE {get_params|join(" ")}
  SERVO_OFF
  _SET_ACC
    
## use MESH_STORE            -> сгенерируйте MESH и немедленно сохраните 
## use MESH_STORE SAVE=false -> сгенерируйте MESH и сохраните его позже
[gcode_macro MESH_STORE]
description: Store mesh now or after the print
variable_save_at_end: 'false'
gcode:
  # set default parameter value
  {% set save = params.SAVE|default('true') %}
  BED_MESH_CALIBRATE
  BED_MESH_PROFILE SAVE=CoreXY_B-Bed_Temp-{printer.heater_bed.target|int}C
  BED_MESH_PROFILE REMOVE=default
  G90
  G0 Z7.5 F900
  G0 X190 Y140 F15000
  {% if save|lower == 'true' %}
    _PRINT_AR T="MESH: Save Config!"
    SAVE_CONFIG
  {% else %}
    _PRINT_AR T="MESH: Save Config after print done"
    SET_GCODE_VARIABLE MACRO=MESH_STORE VARIABLE=save_at_end VALUE='"true"'
  {% endif %}    

## use MESH_LOAD           -> загрузить существующую MESH
## use MESH_LOAD AUTO=true -> загрузить существующую MESH или сгенерировать новую и подготовить ее к сохранению после завершения печати
[gcode_macro MESH_LOAD]
description: Load an existing mesh or generate a new one
gcode:
  # set that to true to enable autogeneration of a missing mesh
  {% set auto = params.AUTO|default('true') %}
  {% set bed_temp = printer.heater_bed.target|int %}
  {% if printer.configfile.config["bed_mesh CoreXY_B-Bed_Temp-" + bed_temp|string + "C"] is defined %}
    BED_MESH_CLEAR
    BED_MESH_PROFILE LOAD=CoreXY_B-Bed_Temp-{printer.heater_bed.target|int}C
    _PRINT_AR T="{"MESH: CoreXY_B-Bed_Temp-" + bed_temp|string + "C loaded"}"
  {% else %}
    {% if auto|lower == 'true' %}
      _PRINT_AR T="{"MESH: CoreXY_B-Bed_Temp-" + bed_temp|string + "C needs to be generated"}"
      MESH_STORE SAVE=false
    {% else %}
      _PRINT_AR T="{"MESH ERROR: CoreXY_B-Bed_Temp-" + bed_temp|string + "C not defined"}"
    {% endif %}
  {% endif %}

## добавьте это в свой PRINT_END, чтобы сохранить сетку, если необходимо, через 10 секунд после завершения печати
## UPDATE_DELAYED_GCODE ID=_MESH_SAVE DURATION=10
[delayed_gcode _MESH_SAVE]
gcode:
  {% if printer["gcode_macro MESH_STORE"].save_at_end == 'true'  %}
    _PRINT_AR T="MESH: Save Config!"
    SAVE_CONFIG
  {% endif %}