#####################################################################
#  Bed Mesh Definition
#####################################################################
[bed_mesh]
##  Start end end point of mesh 
mesh_min: 36,4
mesh_max: 375,277
speed: 100
horizontal_move_z: 1.4
probe_count: 17,13
##   The interpolation algorithm to use. May be either "lagrange"
##   or "bicubic". This option will not affect 3x3 grids, which
##   are forced to use lagrange sampling.  Default is lagrange.
algorithm: bicubic
##[(7x7)-1] / 2 = 24
##[(5x5)-1] / 2 = 12
relative_reference_index: 110
##   The gcode z position in which to start phasing out z-adjustment
##   when fade is enabled.  Default is 1.0.
#fade_start: 1
##   The gcode z position in which phasing out completes.  When set
##   to a value below fade_start, fade is disabled. It should be
##   noted that fade may add unwanted scaling along the z-axis of a
##   print.  If a user wishes to enable fade, a value of 10.0 is
##   recommended. Default is 0.0, which disables fade.
#fade_end: 10
##   The z position in which fade should converge. When this value is set
##   to a non-zero value it must be within the range of z-values in the mesh.
##   Users that wish to converge to the z homing position should set this to 0.
##   Default is the average z value of the mesh.
#fade_target: 0
##   The distance (in mm) along a move to check for split_delta_z.
##   This is also the minimum length that a move can be split. Default
##   is 5.0.
move_check_distance: 3
##   The amount of Z difference (in mm) along a move that will
##   trigger a split. Default is .025.
split_delta_z: 0.0125
##   A comma separated pair of integers (X,Y) defining the number of
##   points per segment to interpolate in the mesh along each axis. A
##   "segment" can be defined as the space between each probed
##   point. The user may enter a single value which will be applied
##   to both axes.  Default is 2,2.
mesh_pps: 2,2
##   When using the bicubic algorithm the tension parameter above
##   may be applied to change the amount of slope interpolated.
##   Larger numbers will increase the amount of slope, which
##   results in more curvature in the mesh. Default is .2.
#bicubic_tension: 0.2

#####################################################################
#  Macros
#####################################################################
## настройка  BED MESH CALIBRATE gcode 
[gcode_macro BED_MESH_CALIBRATE]
description: Perform QGL and bed mesh leveling
rename_existing: BED_MESH_CALIBRATE_BASE
gcode:
  # get params and prepare to send them to the base macro
  {% set get_params = [] %}
  {% for key in params %}
    {% set get_params = get_params.append(key + "=" + params[key])  %}
  {% endfor %}
  _CG28
  G28 Z
  BED_MESH_CLEAR
  _SET_ACC VAL=HOME
  SERVO_ON
  BED_MESH_CALIBRATE_BASE {get_params|join(" ")}
  SERVO_OFF
  _SET_ACC
    
## use MESH_STORE            -> сгенерируйте MESH и немедленно сохраните 
## use MESH_STORE SAVE=false -> сгенерируйте MESH и сохраните его позже
[gcode_macro MESH_STORE]
description: Store mesh now or after the print
variable_save_at_end: 'false'
gcode:
  # set default parameter value
  {% set save = params.SAVE|default('true') %}
  BED_MESH_CALIBRATE
  BED_MESH_PROFILE SAVE=CoreXY_B-Bed_Temp-{printer.heater_bed.target|int}C
  BED_MESH_PROFILE REMOVE=default
  G90
  G0 Z7.5 F900
  G0 X190 Y140 F15000
  {% if save|lower == 'true' %}
    _PRINT_AR T="MESH: Save Config!"
    SAVE_CONFIG
  {% else %}
    _PRINT_AR T="MESH: Save Config after print done"
    SET_GCODE_VARIABLE MACRO=MESH_STORE VARIABLE=save_at_end VALUE='"true"'
  {% endif %}    

## use MESH_LOAD           -> загрузить существующую MESH
## use MESH_LOAD AUTO=true -> загрузить существующую MESH или сгенерировать новую и подготовить ее к сохранению после завершения печати
[gcode_macro MESH_LOAD]
description: Load an existing mesh or generate a new one
gcode:
  # set that to true to enable autogeneration of a missing mesh
  {% set auto = params.AUTO|default('true') %}
  {% set bed_temp = printer.heater_bed.target|int %}
  {% if printer.configfile.config["bed_mesh CoreXY_B-Bed_Temp-" + bed_temp|string + "C"] is defined %}
    BED_MESH_CLEAR
    BED_MESH_PROFILE LOAD=CoreXY_B-Bed_Temp-{printer.heater_bed.target|int}C
    _PRINT_AR T="{"MESH: CoreXY_B-Bed_Temp-" + bed_temp|string + "C loaded"}"
  {% else %}
    {% if auto|lower == 'true' %}
      _PRINT_AR T="{"MESH: CoreXY_B-Bed_Temp-" + bed_temp|string + "C needs to be generated"}"
      MESH_STORE SAVE=false
    {% else %}
      _PRINT_AR T="{"MESH ERROR: CoreXY_B-Bed_Temp-" + bed_temp|string + "C not defined"}"
    {% endif %}
  {% endif %}

## добавьте это в свой PRINT_END, чтобы сохранить сетку, если необходимо, через 10 секунд после завершения печати
## UPDATE_DELAYED_GCODE ID=_MESH_SAVE DURATION=10
[delayed_gcode _MESH_SAVE]
gcode:
  {% if printer["gcode_macro MESH_STORE"].save_at_end == 'true'  %}
    _PRINT_AR T="MESH: Save Config!"
    SAVE_CONFIG
  {% endif %}