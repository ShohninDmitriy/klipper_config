#####################################################################
#  Macros to debug the printer variable
#####################################################################
[gcode_macro DUMP_PARAMETERS]
description: Debug: Print all entries of the printer object
gcode:
  {% set parameters = namespace(output = '') %}
  {% for name1 in printer %}
    {% for name2 in printer[name1] %}
      {% set donotwant = ['bed_mesh','configfile'] %}
      {% if name1 is not in donotwant %}
        {% set param = "printer['%s'].%s = %s" % (name1, name2, printer[name1][name2]) %}
        {% set parameters.output = parameters.output +  param + "\n" %}
      {% endif %}
    {% endfor %}
  {% endfor %}
  {action_respond_info(parameters.output)}

[gcode_macro DUMP_CONFIG]
description: Debug: Print all entries of the printer config object
gcode:
  {% set parameters = namespace(output = '') %}
  {% for name1 in printer.configfile.config %}
    {% set show = ['printer', "bed_mesh VORON-0C-MUELLER"] %}
    {% if name1 is in show %}
      {% set param = "printer.configfile.config['%s'] = %s" % (name1, printer.configfile.config[name1]) %}
      {% set parameters.output = parameters.output +  param + "\n" %}
    {% endif %}
  {% endfor %}
  {action_respond_info(parameters.output)}
  
[gcode_macro DUMP_SETTINGS]
description: Debug: Print all entries of the printer settings object
gcode:
  {% set parameters = namespace(output = '') %}
  {% for name1 in printer.configfile.settings %}
    {% set show = ['virtual_sdcard'] %}
    {% if name1 is in show %}
      {% set param = "printer.configfile.settings['%s'] = %s" % (name1, printer.configfile.settings[name1]) %}
      {% set parameters.output = parameters.output +  param + "\n" %}
    {% endif %}
  {% endfor %}
  {action_respond_info(parameters.output)}


[gcode_macro SEARCH_VARS]
description: Search printer.name use S=""
gcode:
    {% set search = params.S|lower %}
    {% set ns = namespace() %}
    {% for item in printer  %}
        {% if ' ' in item %}
            {% set ns.path = ['printer', "['%s']" % (item), ''] %}
        {% else %}
            {% set ns.path = ['printer.', item, ''] %}   
        {% endif %} 

        {% if search in ns.path|lower %}
            { action_respond_info(ns.path|join) }
        {% endif %} 

        {% if printer[item].items() %}
            {% for childkey, child in printer[item].items() recursive %}
                {% set ns.path = ns.path[:loop.depth|int + 1] %}

                {% if ' ' in childkey %}
                    {% set null = ns.path.append("['%s']" % (childkey)) %}
                {% else %}
                    {% set null = ns.path.append(".%s" % (childkey)) %}
                {% endif %} 

                {% if child is mapping  %}
                    { loop(child.items()) }
                {% else %}
                    {% if search in ns.path|lower %}
                        { action_respond_info("%s : %s" % (ns.path|join, child)) }   
                    {% endif %} 
                {% endif %} 
                
            {% endfor %}
        {% endif %} 
    {% endfor %}
    
[gcode_macro test1]
gcode:
  M220 S100
  test
  M220 S90
  test
  M220 S80
  test
  M220 S70
  test
  M220 S60
  test
  M220 S50
  test
  M220 S40
  test
  M220 S30
  test
  M220 S20
  test
  M220 S10
  test
  M220 S5
  test
 
[gcode_macro test]
gcode:
  G0 x380 y280 F18000
  G0 x0 y280
  G0 x380 y0
  G0 x0 y140
  G0 x380 y140
  G0 x0 y0
  G0 x380 y0
  G0 x380 y280
  G0 x0 y280
  G0 x0 y0


#####################################################################
#  Macros needed for several debug activities
#####################################################################
[gcode_macro mesh_move_test]
gcode:
  G90
  G1 Z10
  M400
  TAKE_POS
  G1 X232 Y355 F6000  ; move to z-endstop
  M400
  TAKE_POS
  G1 X175 Y175 F6000  ; move to middle
  M400
  TAKE_POS
  G1 X30 Y30 F6000   ; move to left front mesh point
  M400
  TAKE_POS
  G1 X320 Y30 F6000  ; move to left back mesh point
  M400
  TAKE_POS
  G1 X320 Y320 F6000 ; move to right back mesh point
  M400
  TAKE_POS
  G1 X30 Y320 F6000  ; move to right front mesh point
  M400
  TAKE_POS
  
[gcode_macro TAKE_POS]
gcode:
  {% set act = printer.toolhead.position %}
  {% set gact = printer.gcode_move.position %}
  {% set gcode = printer.gcode_move.gcode_position %}
  {action_respond_info("Head X:Y = %d:%d --> Z: %f
                        GCHe X:Y = %d:%d --> Z: %f
                        Code X:Y = %d:%d --> Z: %f " % (act.x,act.y,act.z,gact.x,gact.y,gact.z,gcode.x,gcode.y,gcode.z))}

[gcode_macro PRINT_ACC]
gcode:
  {% set accel = printer.toolhead.max_accel %}
  {% set accel_to_decel = printer.toolhead.max_accel_to_decel %}
  {action_respond_info("VELOCITY_LIMIT set ACCEL: %d ACCEL_TO_DECEL: %d" % (accel|int, accel_to_decel|int))}

[gcode_macro TEST]
gcode:
  {% if not printer.bed_mesh.profile_name %} 
    {action_respond_info("No Mesh loaded")}
  {% else %}
    {action_respond_info("Mesh %s loaded" % printer.bed_mesh.profile_name)}
  {% endif %}