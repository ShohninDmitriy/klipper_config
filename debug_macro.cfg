# Use:
# - DUMP_PARAMETERS                       print all parameter expect configfile
# - DUMP_PARAMETERS P='gcode_macro _TEST' print the defined parameter group
# - DUMP_PARAMETERS C='printer'           print the defined config values
# - DUMP_PARAMETERS S='printer'           print the defined settings values
[gcode_macro DUMP_PARAMETER]
description: Debug: Print entries of the printer object
gcode:
  {% set config = True if params.C or params.S else False %}
  {% set path = 'config'   if params.C 
           else 'settings' if params.S %}
  {% set search = params.C if params.C
             else params.S if params.S
             else params.P if params.P %}
  {% set out = [] %}
  {% for name1 in printer|sort %}
    {% if config %} ; print the searched printer.configfile[path] parameter
      {% if name1 is in ['configfile'] %}
        {% for name2 in printer[name1][path]|sort %}
          {% if name2 is in [search] %}
            {% for name3 in printer[name1][path][name2]|sort %}
              {% set _dummy = out.append("printer.configfile.%s['%s'].%s = %s" % 
                          (path, name2, name3, printer[name1][path][name2][name3])) %}
            {% endfor %}
          {% endif %}
        {% endfor %}
      {% endif %}
    {% else %}
      {% for name2 in printer[name1]|sort %} ; search for anything expext printer.configfile
        {% if search is not defined and name1 is not in ['configfile'] %} ; print all printer. parameter
          {% set _dummy = out.append("printer['%s'].%s = %s" % (name1, name2, printer[name1][name2])) %}
        {% elif search is defined and name1 is in [search] %} ; print the searched printer. parameter
          {% set _dummy = out.append("printer['%s'].%s = %s" % (name1, name2, printer[name1][name2])) %}
        {% endif %}
      {% endfor %}
    {% endif %}
  {% endfor %}
  {% if out|length > 0 %}
    {action_respond_info(out|join("\n"))}
  {% else %}
    {action_respond_info("Nothing found for \"DUMP_PARAMETER %s\"" % rawparams)}
  {% endif %}

[gcode_macro DUMP_PRINT_AREA_LIMITS]
description: Debug: Print information about print volume and probeable area
gcode:
  {% set min = printer.toolhead.axis_minimum %}
  {% set max = printer.toolhead.axis_maximum %}
  {% set probe_offset = {'x' : printer.configfile.settings.probe.x_offset,
                         'y' : printer.configfile.settings.probe.y_offset} %}
  {% set probe_area = {'min' : {'x' : [min.x,(min.x-probe_offset.x)]|max,
                                'y' : [min.y,(min.y-probe_offset.y)]|max},
                       'max' : {'x' : [max.x,(max.x-probe_offset.x)]|min,
                                'y' : [max.y,(max.y-probe_offset.y)]|min}} %}
  {action_respond_info("Print Volume Limits:
                        Min X:%7.1f, Y:%7.1f, Z:%7.1f
                        Max X:%7.1f, Y:%7.1f, Z:%7.1f
                        Probe Area Limits:
                        Min X:%7.1f, Y:%7.1f
                        Max X:%7.1f, Y:%7.1f" % 
    (min.x,min.y,min.z,max.x,max.y,max.z,probe_area.min.x,probe_area.min.y, probe_area.max.x,probe_area.max.y))}


#  Macros needed for several debug activities

[gcode_macro DUMP_SATS]
gcode:
    {% set cpu_t = printer.system_stats.cputime %}
    {% set cpu_h = (cpu_t / 3600)|int %}
    {% set cpu_m = ((cpu_t / 60) % 60)|int %}
    {% set cpu_s = (cpu_t % 60)|int %}
    {% set sysload = printer.system_stats.sysload|float * 100.0 %}
    {% set mem_val = printer.system_stats.memavail|float  %}
    {action_respond_info("klipper process statistic:
                        Head stalls: %d
                        CPU Time: %d:%02d:%02d
                        Sysload: %.2f percent
                        Mem Val: %.3f MB" % (printer.toolhead.stalls, cpu_h, cpu_m ,cpu_s, sysload, mem_val))}

[gcode_macro test_move_full]
gcode:
  M220 S100
  test_move
  M220 S90
  test_move
  M220 S80
  test_move
  M220 S70
  test_move
  M220 S60
  test_move
  M220 S50
  test_move
  M220 S40
  test_move
  M220 S30
  test_move
  M220 S20
  test_move
  M220 S10
  test_move
  M220 S5
  test_move
 
[gcode_macro test_move]
gcode:
  G0 x345 y280 F21000
  G0 x0 y280
  G0 x345 y0
  G0 x0 y140
  G0 x345 y140
  G0 x0 y0
  G0 x345 y0
  G0 x345 y280
  G0 x0 y280
  G0 x0 y0

